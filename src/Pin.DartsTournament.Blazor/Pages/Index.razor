@page "/"

@inject ITournamentService service

<center><PageTitle>Darts Toernooi</PageTitle></center>

@if(Tournament == null)
{
    <Loading Subject="Home" />
}
else
{
    <BannerWithTitle Model="@Tournament" ImageSrc="/images/darts_banner2.jpg" />

    if(newPlayer == null && Legs.Count() == 0)
    {
     <div class="container">
        <button class="btn btn-info" @onclick="StartTournament">Start het toernooi</button>
     </div>
        
    <PlayerTable ModelList="@Players" OnAddClick="AddPlayer" />
    }
    @if(newPlayer != null)
    {
        <PlayerForm Model="newPlayer"
            OnSaveClick="AddPlayerToTournament"
            OnBackClick="GetTournament"></PlayerForm>

        @if (!string.IsNullOrEmpty(message))
        {
            <div class="alert alert-success">
                @message
            </div>
        }
    }
    @if(Legs.Count() > 0)
    {
        <MatchCards LegsList="@Legs" />
    }
}

@code {
    private Tournament Tournament { get; set; }
    private string Date { get; set; }
    private Player newPlayer;
    private IEnumerable<Leg> Legs { get; set; }
    private IEnumerable<Player> Players { get; set; }
    private string message;

    protected override async Task OnInitializedAsync()
    {
        #if DEBUG
    await Task.Delay(2000);
        #endif
        await GetTournament();
    }

    public async Task GetTournament()
    {
        this.newPlayer = null;

        Tournament = await service.GetByIdAsync(100);

        Date = Tournament.Date.ToString("dd/MM/yyyy");

        Players = Tournament.Players;

        Legs = Tournament.Legs;
    }

    public void AddPlayer()
    {
        this.newPlayer = new Player();
    }

    public async Task AddPlayerToTournament(Player player)
    {
        player.TournamentId = this.Tournament.Id;
        await service.AddPlayerToTournament(player);
        
        this.message = $"{player.Name} werd toegevoegd aan het toernooi.";
        
        player.Name = null;
        StateHasChanged();

        await ClearMessages();
    }

    private async Task ClearMessages()
    {
        await Task.Delay(5000);
        this.message = null;
    }

    public async Task StartTournament()
    {
        var id = Tournament.Id;
        await service.StartTournament(id);

        await GetTournament();
    }
}